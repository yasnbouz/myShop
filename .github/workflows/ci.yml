name: CI
on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  Build:
    name: Build Nextjs App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.11.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        id: cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm i

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build
        env:
          NEXT_PUBLIC_SHOPIFY_STORE_ID: ${{secrets.SHOPIFY_STORE_ID}}
          NEXT_PUBLIC_SHOPIFY_API_TOKEN: ${{secrets.SHOPIFY_API_TOKEN}}
          NEXT_PUBLIC_SITE_URL: ${{secrets.SITE_URL}}

  Deploy:
    name: Deploy To Vercel
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v3

      - name: Depolying to Vercel
        uses: amondnet/vercel-action@v20.0.0
        id: vercel-deployment
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          vercel-project-name: 'my-shop'
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
    outputs:
      preview-url: ${{ steps.vercel-deployment.outputs.preview-url }}

  E2E_Tests:
    name: Playwright Testing
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    steps:
      - name: Install Playwright
        run: pnpm dlx playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm dlx playwright test
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: ${{ github.event.deployment_status.target_url }}

  Lighthouse:
    name: Measure Performance with lighthouse
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            ${{ needs.Deploy.outputs.preview-url }}
          configPath: './lighthouserc.json'
          serverBaseUrl: ${{ secrets.LHCI_SERVER_URL }}
          serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
